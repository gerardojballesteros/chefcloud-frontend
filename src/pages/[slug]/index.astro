---
// Pagina de menú individual
export const prerender = false;

import MenuCard from "../../components/menu/MenuCard.astro";
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/header/Header.astro";
import BottomCategoryNav from "../../components/menu/BottomCategoryNav.astro";
import { getMenuBySlug } from "../../services/menu.service";
import type { MenuResponse } from "../../types/menu";
import { menuCache } from "../../utils/cache";

const { slug } = Astro.params;
if (!slug) throw new Error("Falta el parámetro 'slug' en la ruta.");

let theme: string = "dark";
let data: MenuResponse | null = menuCache.get(slug) ?? null;

if (!data) {
  try {
    data = await getMenuBySlug(slug);
    menuCache.set(slug, data);
  } catch (err) {
    console.error("Error cargando datos del menú:", err);
  }
}

if (data?.theme && typeof data.theme === "string") {
  theme = "dark";
}
---

<Layout theme={theme} title={data ? `${data.name} | Chefcloud` : "Cargando..."}>
  <Header name={data?.name ?? ""} logo={data?.logo} theme={theme} />

  {
    theme === "dark" && (
      <div
        class="fixed inset-x-0 bottom-0 h-[100dvh] z-0 pointer-events-none"
        style="background: radial-gradient(circle at 50% 100%, rgba(194, 172, 255, 0.088), transparent 90%)"
      />
    )
  }

  <main
    id="menu-scroll-container"
    class="relative max-w-5xl mx-auto px-4 pb-20 pt-12"
  >
    {
      !data ? (
          <div class="animate-pulse ">
            <div class="h-10 w-[80%] md:w-[40%] rounded-xl bg-black/20 rounded mt-5 md:mt-8 border-card" />
          </div>
        <section class="grid grid-cols-1 md:grid-cols-2 gap-2 mt-8 md:mt-8">
          {[...Array(6)].map(() => (
            <div class="animate-pulse flex items-center gap-4 p-4 w-full h-[140px] md:h-[160px] rounded-2xl shadow-md border-card bg-theme-card">
              <div class="flex flex-col justify-between flex-1 h-full">
                <div class="h-5 w-2/3 bg-black/20 rounded mb-2" />
                <div class="h-4 w-full bg-black/10 rounded mb-1" />
                <div class="h-4 w-5/6 bg-black/10 rounded mb-3" />
                <div class="h-5 w-1/4 bg-black/20 rounded" />
              </div>
              <div class="w-28 h-28 md:w-34 md:h-34 bg-black/10 rounded-xl" />
            </div>
          ))}
        </section>
      ) : (
        data.menus?.map((menu) => (
          <section>
            {menu.categories.map((category) => {
              const catId = category.name.toLowerCase().replace(/\s+/g, "-");

              return (
                <div class="mb-4 scroll-mt-14" id={catId}>
                  <h1 class="py-6 text-theme-title" data-category-title>
                    {category.name}
                  </h1>
                  <ul class="grid grid-cols-1 md:grid-cols-2 gap-2">
                    {category.items.map((item, index) => (
                      <MenuCard {...item} index={index} />
                    ))}
                  </ul>
                </div>
              );
            })}
          </section>
        ))
      )
    }
  </main>

  {
  !data ? (
    <nav
      class="fixed bottom-6 left-4 md:right-4 inset-x-0 z-40 max-w-5xl mx-auto overflow-x-auto flex gap-4 px-4 py-[10px] backdrop-blur-md border-category-bottom bg-theme-bg-blur
      rounded-l-lg md:rounded-lg"
    >
      {[...Array(2)].map(() => (
        <div class="animate-pulse w-100 h-6 bg-black/10 rounded-md" />
      ))}
    </nav>
  ) : (
    <BottomCategoryNav
      categories={
        data.menus
          ?.flatMap((menu) => menu.categories)
          ?.map((cat) => ({
            id: cat.name.toLowerCase().replace(/\s+/g, "-"),
            name: cat.name,
          })) ?? []
      }
    />
  )
}
</Layout>

<script is:inline>
  function restoreScroll() {
    // Si la bandera "fromDetail" está en sessionStorage, restauramos la posición.
    const fromDetail = sessionStorage.getItem("fromDetail");
    if (fromDetail === "true") {
      const pos = sessionStorage.getItem("scrollPosition");
      if (pos) {
        window.scrollTo({ top: parseInt(pos, 10), behavior: "auto" });
      }
      // Borramos los valores para que, en un refresh, se inicie desde arriba.
      sessionStorage.removeItem("scrollPosition");
      sessionStorage.removeItem("fromDetail");
    }
  }

  document.addEventListener("DOMContentLoaded", restoreScroll);
  document.addEventListener("astro:after-swap", restoreScroll);
  window.addEventListener("pageshow", restoreScroll);
</script>


<style>
  @reference "../../styles/global.css";
</style>
