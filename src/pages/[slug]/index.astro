---
export const prerender = false;

import MenuCard from "../../components/menu/MenuCard.astro";
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/header/Header.astro";
import BottomCategoryNav from "../../components/menu/BottomCategoryNav.astro";
import { getMenuBySlug } from "../../services/menu.service";
import type { MenuResponse } from "../../types/menu";
import { menuCache } from "../../utils/cache";

const { slug } = Astro.params;
if (!slug) throw new Error("Falta el parámetro 'slug' en la ruta.");

let theme: string = "dark";
let data: MenuResponse | null = menuCache.get(slug) ?? null;

if (!data) {
  try {
    data = await getMenuBySlug(slug);
    menuCache.set(slug, data);
  } catch (err) {
    console.error("Error cargando datos del menú:", err);
  }
}

if (data?.theme && typeof data.theme === "string") {
  theme = data.theme;
}
---

{
  !data ? (
    <div class="text-center py-10 text-red-600 font-bold">
      Restaurante no encontrado o error de conexión.
    </div>
  ) : (
    <Layout theme={theme} title={`${data.name} | Chefcloud`}>
      <Header name={data.name} logo={data.logo} theme={theme} />

      <main
        id="menu-scroll-container"
        class="relative max-w-5xl mx-auto px-4 pb-20 pt-12"
      >
        {data.menus?.map((menu) => (
          <section>
            {menu.categories.map((category) => {
              const catId = category.name.toLowerCase().replace(/\s+/g, "-");
              return (
                <div class="mb-4 scroll-mt-14" id={catId}>
                  <h1 class="py-6 text-theme-title" data-category-title>
                    {category.name}
                  </h1>
                  <ul class="grid grid-cols-1 md:grid-cols-2 gap-2">
                    {category.items.map((item) => (
                      <MenuCard {...item} />
                    ))}
                  </ul>
                </div>
              );
            })}
          </section>
        ))}
      </main>

      <BottomCategoryNav
        categories={
          data.menus
            ?.flatMap((menu) => menu.categories)
            ?.map((cat) => ({
              id: cat.name.toLowerCase().replace(/\s+/g, "-"),
              name: cat.name,
            })) ?? []
        }
      />
    </Layout>
  )
}

<style>
  @reference "../../styles/global.css";
</style>

<script is:inline type="module" src="/src/scripts/scrollspy.js"></script>
